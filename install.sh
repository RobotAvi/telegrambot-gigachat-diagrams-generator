#!/bin/bash

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Diagram Generator Telegram Bot"
echo "==========================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
install_package() {
    local package=$1
    local use_venv=${2:-true}
    
    echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $package..."
    
    if [ "$use_venv" = true ] && [ -d "venv" ]; then
        # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        if source venv/bin/activate && pip install "$package"; then
            echo "‚úÖ $package —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
            return 0
        else
            echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $package –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
            return 1
        fi
    else
        # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ —Å --break-system-packages
        if pip install --break-system-packages "$package"; then
            echo "‚úÖ $package —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ"
            return 0
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $package"
            return 1
        fi
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8 –∏–ª–∏ –≤—ã—à–µ."
    exit 1
fi

python_version=$(python3 --version 2>&1 | grep -oP '(?<=Python )\d+\.\d+')
required_version="3.8"

if [ "$(printf '%s\n' "$required_version" "$python_version" | sort -V | head -n1)" != "$required_version" ]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $python_version"
    exit 1
fi

echo "‚úÖ Python –≤–µ—Ä—Å–∏—è $python_version –ø–æ–¥—Ö–æ–¥–∏—Ç"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ externally managed environment
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python..."
USE_VENV=true
EXTERNALLY_MANAGED=false

if pip install --help 2>&1 | grep -q "externally-managed-environment" || 
   python3 -c "import sys; exit(0 if hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix else 1)" 2>/dev/null; then
    echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ externally managed environment"
    EXTERNALLY_MANAGED=true
fi

# –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python..."
if python3 -m venv --help &> /dev/null; then
    echo "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    if python3 -m venv venv 2>/dev/null; then
        echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
        USE_VENV=true
    else
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
        echo "üìù –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å --break-system-packages"
        USE_VENV=false
    fi
else
    echo "‚ö†Ô∏è python3-venv –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìù –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å --break-system-packages"
    USE_VENV=false
    
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "üí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ venv –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        echo "  ‚Ä¢ Ubuntu/Debian: sudo apt install python3-venv python3-dev"
        echo "  ‚Ä¢ CentOS/RHEL: sudo yum install python3-devel"
        echo "  ‚Ä¢ Fedora: sudo dnf install python3-devel"
    fi
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ
if [ "$USE_VENV" = true ] && [ -d "venv" ]; then
    echo "üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    source venv/bin/activate
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
    echo "‚¨ÜÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
    pip install --upgrade pip
else
    echo "üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "ÔøΩ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ "$USE_VENV" = true ] && [ -d "venv" ]; then
    source venv/bin/activate
    pip install wheel setuptools
else
    pip install --break-system-packages wheel setuptools 2>/dev/null || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å wheel/setuptools"
fi

# –°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
CORE_PACKAGES=(
    "aiogram==3.10.0"
    "python-dotenv==1.0.0"
    "requests==2.31.0"
    "asyncio-throttle==1.0.2"
)

# –°–ø–∏—Å–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ (–º–æ–≥—É—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥–∞—Ö)
OPTIONAL_PACKAGES=(
    "pillow==10.0.0"
    "diagrams==0.23.4"
)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
echo "ÔøΩ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
CORE_SUCCESS=true
for package in "${CORE_PACKAGES[@]}"; do
    if ! install_package "$package" "$USE_VENV"; then
        CORE_SUCCESS=false
        echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $package"
    fi
done

if [ "$CORE_SUCCESS" = false ]; then
    echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏"
    echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "  ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å python3-dev: sudo apt install python3-dev"
    echo "  ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç—å pip: python3 -m pip install --upgrade pip"
    echo "  ‚Ä¢ –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã –≤—Ä—É—á–Ω—É—é"
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
echo "ÔøΩ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
OPTIONAL_SUCCESS=true
for package in "${OPTIONAL_PACKAGES[@]}"; do
    if ! install_package "$package" "$USE_VENV"; then
        OPTIONAL_SUCCESS=false
        echo "‚ö†Ô∏è –ü–∞–∫–µ—Ç $package –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É—é—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏)"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Graphviz (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è diagrams)
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Graphviz..."
if ! command -v dot &> /dev/null; then
    echo "‚ö†Ô∏è Graphviz –Ω–µ –Ω–∞–π–¥–µ–Ω."
    echo "üí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Graphviz:"
    
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "  ‚Ä¢ Ubuntu/Debian: sudo apt install graphviz"
        echo "  ‚Ä¢ CentOS/RHEL: sudo yum install graphviz"
        echo "  ‚Ä¢ Fedora: sudo dnf install graphviz"
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        echo "  ‚Ä¢ macOS: brew install graphviz"
    else
        echo "  ‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å: https://graphviz.org/download/"
    fi
    
    echo "‚ö†Ô∏è –ë–µ–∑ Graphviz –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ diagrams –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å"
else
    echo "‚úÖ Graphviz –Ω–∞–π–¥–µ–Ω: $(dot -V 2>&1 | head -1)"
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p temp diagrams

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f .env ]; then
    if [ -f .env.example ]; then
        cp .env.example .env
        echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
    else
        echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞..."
        cat > .env << 'EOF'
# Telegram Bot Configuration
BOT_TOKEN=your_telegram_bot_token_here

# GigaChat API Configuration  
# –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ https://developers.sber.ru/gigachat
GIGACHAT_CLIENT_SECRET=your_gigachat_client_secret_here
EOF
        echo "‚úÖ –ë–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
    fi
    echo "‚ùó –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å BOT_TOKEN –∏ GIGACHAT_CLIENT_SECRET –≤ —Ñ–∞–π–ª–µ .env"
else
    echo "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
IMPORT_TEST=$(python3 -c "
import sys
errors = []
success = []

try:
    import aiogram
    success.append('aiogram')
except ImportError as e:
    errors.append(f'aiogram: {e}')

try:
    import aiohttp  
    success.append('aiohttp')
except ImportError as e:
    errors.append(f'aiohttp: {e}')

try:
    from dotenv import load_dotenv
    success.append('python-dotenv')
except ImportError as e:
    errors.append(f'python-dotenv: {e}')

try:
    import requests
    success.append('requests')
except ImportError as e:
    errors.append(f'requests: {e}')

try:
    import asyncio_throttle
    success.append('asyncio-throttle')
except ImportError as e:
    errors.append(f'asyncio-throttle: {e}')

try:
    import diagrams
    success.append('diagrams')
except ImportError as e:
    errors.append(f'diagrams: {e}')

try:
    from PIL import Image
    success.append('Pillow')
except ImportError as e:
    errors.append(f'Pillow: {e}')

print(f'SUCCESS:{len(success)}')
print(f'ERRORS:{len(errors)}')
for s in success:
    print(f'‚úÖ {s}')
for e in errors:
    print(f'‚ùå {e}')
" 2>&1)

echo "$IMPORT_TEST"

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
SUCCESS_COUNT=$(echo "$IMPORT_TEST" | grep "SUCCESS:" | cut -d: -f2)
ERROR_COUNT=$(echo "$IMPORT_TEST" | grep "ERRORS:" | cut -d: -f2)

echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
echo "‚úÖ –£—Å–ø–µ—à–Ω–æ: $SUCCESS_COUNT –ø–∞–∫–µ—Ç–æ–≤"
echo "‚ùå –û—à–∏–±–∫–∏: $ERROR_COUNT –ø–∞–∫–µ—Ç–æ–≤"

if [ "$ERROR_COUNT" -eq 0 ]; then
    echo ""
    echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —É @BotFather –≤ Telegram"
    echo "2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É–∫–∞–∂–∏—Ç–µ BOT_TOKEN"
    echo "3. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á GigaChat –Ω–∞ https://developers.sber.ru/gigachat"
    echo "4. –£–∫–∞–∂–∏—Ç–µ GIGACHAT_CLIENT_SECRET –≤ —Ñ–∞–π–ª–µ .env"
    echo "5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: ./run.sh"
    echo ""
    echo "‚ú® –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
elif [ "$SUCCESS_COUNT" -ge 5 ]; then
    echo ""
    echo "üéâ –û—Å–Ω–æ–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å, –Ω–æ –±–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —É @BotFather –≤ Telegram"
    echo "2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É–∫–∞–∂–∏—Ç–µ BOT_TOKEN"
    echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: ./run.sh"
    echo ""
    if ! command -v dot &> /dev/null; then
        echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–≥—Ä–∞–º–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Graphviz!"
        echo "üí° sudo apt install graphviz  # Ubuntu/Debian"
        echo ""
    fi
    echo "‚ú® –ß–∞—Å—Ç–∏—á–Ω–æ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
else
    echo ""
    echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ—à–∏–±–∫–∞–º–∏"
    echo ""
    echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º:"
    echo "‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: sudo apt install python3-dev python3-venv"
    echo "‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ pip: python3 -m pip install --upgrade pip"
    echo "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã –≤—Ä—É—á–Ω—É—é:"
    echo "  pip install --break-system-packages aiogram python-dotenv requests"
    echo ""
    exit 1
fi